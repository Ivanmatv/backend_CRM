# Generated by Django 3.2.16 on 2024-03-03 09:04

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Ambassador',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('telegram', models.CharField(max_length=32, unique=True, verbose_name='Ник в телеграме')),
                ('first_name', models.CharField(max_length=100, verbose_name='Имя')),
                ('last_name', models.CharField(max_length=100, verbose_name='Фамилия')),
                ('second_name', models.CharField(max_length=100, verbose_name='Отчество')),
                ('gender', models.CharField(choices=[('M', 'Мужской'), ('F', 'Женский')], max_length=1, verbose_name='Пол')),
                ('course', models.CharField(choices=[('data_analyst', 'Аналитик данных'), ('data_scientist', 'Специалист по Data Science'), ('python_developer', 'Python-разработчик'), ('web_developer', 'Веб-разработчик'), ('qa', 'Инженер по тестированию (QA)'), ('ux_ui', 'UX/UI-дизайнер'), ('marketing', 'Маркетинг'), ('graphic_designer', 'Графический дизайнер'), ('middle_python', 'Middle Python'), ('c++', 'C++'), ('data_engineer', 'Инженер данных'), ('it-recruiter', 'IT-рекрутер'), ('management', 'Управление'), ('english', 'Английский'), ('critical_thinking', 'Критическое мышление'), ('work_communication', 'Рабочая коммуникация'), ('algorithms', 'Алгоритмы для разработчиков'), ('product_design', 'Продуктовый дизайн'), ('sql', 'SQL для работы с данными и аналитики'), ('java_developer', 'Java-разработчик'), ('illustrator', 'Коммерческий иллюстратор'), ('fullstack_developer', 'Фулстек разработчик'), ('go_developer', 'Продвинутый GO-разработчик'), ('devops', 'DevOps для эксплуатации и разработки'), ('ios_developer', 'IOS-разработчик'), ('business_analyst', 'Бизнес-аналитик'), ('product_manager', 'Продакт-менеджер для специалистов с опытом'), ('android_developer', 'Android-разработчик'), ('project_manager', 'Менеджер проектов')], max_length=25, verbose_name='Программа обучения')),
                ('country', models.CharField(max_length=100, verbose_name='Страна')),
                ('city', models.CharField(max_length=100, verbose_name='Город')),
                ('address', models.CharField(max_length=100, verbose_name='Адрес')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('phone', models.CharField(max_length=25, verbose_name='Телефон')),
                ('education', models.CharField(max_length=256, verbose_name='Образование')),
                ('status', models.CharField(choices=[('active', 'Активный'), ('paused', 'На паузе'), ('not_amb', 'Не амбассадор'), ('undefined', 'Уточняется')], default='undefined', max_length=11, verbose_name='Статус')),
                ('work', models.CharField(max_length=256, verbose_name='Место работы')),
            ],
            options={
                'verbose_name': 'Амбассадор',
                'verbose_name_plural': 'Амбассадор',
                'ordering': ('pk',),
            },
        ),
        migrations.CreateModel(
            name='Merch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('size', models.PositiveIntegerField(verbose_name='Размер')),
                ('price', models.FloatField(verbose_name='Цена')),
                ('name', models.CharField(max_length=100, verbose_name='Название')),
                ('desc', models.CharField(max_length=200, verbose_name='Описание')),
                ('quantity', models.IntegerField(verbose_name='Количество')),
                ('status', models.CharField(choices=[('IN STOCK', 'В наличии'), ('OUT', 'Закончилось')], max_length=50, verbose_name='Наличие')),
                ('category', models.CharField(max_length=50, verbose_name='Категория')),
                ('data_creation', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Дата создания')),
                ('data_update', models.DateTimeField(auto_now_add=True, verbose_name='Дата обновления')),
                ('image', models.FileField(upload_to='merchs/media/image/', verbose_name='Изображения')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Promocode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start', models.DateTimeField(auto_now_add=True, verbose_name='Дата начала')),
                ('date_end', models.DateTimeField(verbose_name='Дата окончания')),
                ('name', models.CharField(max_length=32, unique=True, verbose_name='Промокод')),
                ('status', models.BooleanField(verbose_name='Активен')),
            ],
            options={
                'verbose_name': 'Промокод',
                'verbose_name_plural': 'Промокоды',
                'ordering': ('pk',),
            },
        ),
        migrations.CreateModel(
            name='AmbassadorPromocode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ambassador_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ambassador_tg', to='ambassadors.ambassador', verbose_name='Амбассадор')),
                ('promocode_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tg_ambassador', to='ambassadors.promocode', verbose_name='Промокод')),
            ],
            options={
                'verbose_name': 'Промокод амбассадора',
                'verbose_name_plural': 'Промокоды амбассадоров',
                'ordering': ('pk',),
            },
        ),
        migrations.CreateModel(
            name='AmbassadorMerch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ambassador_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='amb_merch', to='ambassadors.ambassador', verbose_name='Амбассадор')),
                ('merch_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='merch_amb', to='ambassadors.merch', verbose_name='Мерч')),
            ],
            options={
                'verbose_name': 'Мерч амбассадора',
                'verbose_name_plural': 'Мерч амбассадоров',
                'ordering': ('pk',),
            },
        ),
        migrations.AddField(
            model_name='ambassador',
            name='promocode_id',
            field=models.ManyToManyField(related_name='promocode', through='ambassadors.AmbassadorPromocode', to='ambassadors.Promocode', verbose_name='Промокод'),
        ),
    ]
